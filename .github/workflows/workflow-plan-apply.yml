name: 'Terraform Test'

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

jobs:
  terraform-plan:
    name: 'Terraform Plan'
    runs-on: ubuntu-latest

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v4

    # Login to Azure via Azure CLI
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    # Install the latest version of Terraform CLI
    - name: Setup Terraform CLI
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: "latest"

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init

    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform Format
      run: terraform fmt -check

    # Generates an execution plan for Terraform
    - name: Terraform Plan
      run: terraform plan -output=plan.out

    # Save the Terraform plan output as an artifact
    - name: Upload Plan Artifact
      uses: actions/upload-artifact@v3
      with:
        name: terraform-plan
        path: plan.out
        
  # Apply the Terraform plan only if the plan was successful
  terraform-apply:
    name: 'Terraform Apply'
    needs: terraform-plan
    runs-on: ubuntu-latest

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v4

    # Install the latest version of Terraform CLI
    - name: Setup Terraform CLI
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: "latest"

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init
      
    # Download the Terraform plan artifact
    - name: Download Plan Artifact
      uses: actions/download-artifact@v3
      with:
        name: terraform-plan
        path: .

    # On push to "main", or manual workflow dispatch - apply the Terraform plan
    - name: Terraform Apply
      run: terraform apply -auto-approve plan.out
